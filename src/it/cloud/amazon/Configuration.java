package it.cloud.amazon;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.PropertiesCredentials;

import it.cloud.CloudService;
import it.cloud.utils.ConfigurationFile;

public abstract class Configuration extends it.cloud.Configuration {
	
	private static final Logger logger = LoggerFactory.getLogger(Configuration.class);
	
	public static AWSCredentials AWS_CREDENTIALS = null;
	
	public static String REGION = "us-west-1";
	public static double PRICE_MARGIN = 0.2;
	public static String SECURITY_GROUP_NAME = "CloudRunnerSG";
	public static String CREDENTIALS = "credentials.properties";
	
	public static final String SECURITY_GROUP_DESC = "Security Group generated by cloud-runner";
	public static final String SECURITY_GROUP_FILE_NAME = "securitygroupcreated.txt";
	
	static {
		try {
			loadConfiguration(CONFIGURATION);
		} catch (Exception e) {
			logger.error("Error while configuring the system.", e);
		}
		
		try {
			AWS_CREDENTIALS = new PropertiesCredentials(getInputStream(CREDENTIALS));
		} catch (Exception e) {
			AWS_CREDENTIALS = null;
		}
	}
	
	public static void loadConfiguration(String filePath) throws IOException {
		ConfigurationFile conf = ConfigurationFile.parse(Paths.get(filePath)).getElement(CloudService.PROVIDERS_KEY).getElement("Amazon");
		REGION = conf.getString(CloudService.REGION_KEY, REGION);
		PRICE_MARGIN = conf.getDouble(CloudService.PRICE_MARGIN_KEY, PRICE_MARGIN);
		SECURITY_GROUP_NAME = conf.getString(CloudService.SECURITY_GROUP_NAME_KEY, SECURITY_GROUP_NAME);
		CREDENTIALS = conf.getString(CloudService.CREDENTIALS_KEY, CREDENTIALS);
	}
	
	public static List<String> checkValidity() {
		ArrayList<String> errors = new ArrayList<String>();
		
		if (CREDENTIALS == null || !getPathToFile(CREDENTIALS).toFile().exists())
			errors.add("Credentials file not found!");
		
		return errors;
	}
}
